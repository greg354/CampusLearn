@model CampusLearnPlatform.Models.ViewModels.TutorDashboardViewModel
@{
    ViewData["Title"] = "Tutor Dashboard";
}

<div class="dashboard-container">
    <div class="container">
        <!-- Welcome Section -->
        <div class="welcome-card tutor-welcome fade-in-up">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1>Welcome back, @Model.UserName! 🎓</h1>
                    <p>You're making a difference! @Model.StudentsHelped students helped so far.</p>
                </div>
                <div class="col-md-4 text-md-end">
                    <div class="d-flex gap-2 justify-content-md-end justify-content-start mt-3 mt-md-0">
                        <button class="btn btn-light" onclick="showComingSoon('Upload Material')">
                            <i class="fas fa-upload me-2"></i>Upload
                        </button>
                        <button class="btn btn-success" onclick="showComingSoon('Create Topic')">
                            <i class="fas fa-plus me-2"></i>New Topic
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Quick Stats -->
        <div class="row mb-4">
            <div class="col-md-3 col-sm-6 mb-3">
                <div class="stats-card tutor-students fade-in-up" style="animation-delay: 0.1s;">
                    <div class="stats-icon">
                        <i class="fas fa-user-graduate"></i>
                    </div>
                    <div class="stats-number">@Model.StudentsHelped</div>
                    <div class="stats-label">Students Helped</div>
                </div>
            </div>
            <div class="col-md-3 col-sm-6 mb-3">
                <div class="stats-card tutor-pending fade-in-up" style="animation-delay: 0.2s;">
                    <div class="stats-icon">
                        <i class="fas fa-question-circle"></i>
                    </div>
                    <div class="stats-number">@Model.PendingQueries</div>
                    <div class="stats-label">Pending Queries</div>
                </div>
            </div>
            <div class="col-md-3 col-sm-6 mb-3">
                <div class="stats-card tutor-topics fade-in-up" style="animation-delay: 0.3s;">
                    <div class="stats-icon">
                        <i class="fas fa-book"></i>
                    </div>
                    <div class="stats-number">@Model.TopicsManaged</div>
                    <div class="stats-label">Topics Managed</div>
                </div>
            </div>
            <div class="col-md-3 col-sm-6 mb-3">
                <div class="stats-card tutor-rate fade-in-up" style="animation-delay: 0.4s;">
                    <div class="stats-icon">
                        <i class="fas fa-chart-line"></i>
                    </div>
                    <div class="stats-number">@Model.ResponseRate%</div>
                    <div class="stats-label">Response Rate</div>
                </div>
            </div>
        </div>

        <!-- Priority Alert for Urgent Questions -->
        @if (Model.QuestionsRequiringResponse != null && Model.QuestionsRequiringResponse.Any(q => q.Priority == "Urgent"))
        {
            <div class="alert alert-warning alert-dismissible fade show mb-4 fade-in-up" role="alert" style="animation-delay: 0.5s;">
                <h5 class="alert-heading"><i class="fas fa-exclamation-triangle me-2"></i>Urgent Attention Needed!</h5>
                <p class="mb-0">You have @Model.QuestionsRequiringResponse.Count(q => q.Priority == "Urgent") urgent question(s) waiting for your response.</p>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <div class="row">
            <!-- Main Content Area -->
            <div class="col-lg-8 mb-4">
                <!-- Questions Requiring Response -->
                <div class="card shadow-custom mb-4 fade-in-up" style="animation-delay: 0.6s;">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0"><i class="fas fa-clipboard-list me-2"></i>Questions Requiring Response</h5>
                        <button class="btn btn-sm btn-outline-primary" onclick="showComingSoon('View All')">
                            View All
                        </button>
                    </div>
                    <div class="card-body p-0">
                        @if (Model.QuestionsRequiringResponse != null && Model.QuestionsRequiringResponse.Any())
                        {
                            @foreach (var question in Model.QuestionsRequiringResponse)
                            {
                                <div class="tutor-question-item @(question.Priority == "Urgent" ? "urgent" : "")">
                                    <div class="question-header">
                                        <div>
                                            <h6 class="mb-1">@question.Question</h6>
                                            <small class="text-muted">
                                                <i class="fas fa-user me-1"></i>Asked by @question.StudentName
                                            </small>
                                        </div>
                                        @if (question.Priority == "Urgent")
                                        {
                                            <span class="badge bg-danger">Urgent</span>
                                        }
                                    </div>
                                    <div class="question-footer">
                                        <span class="text-muted">
                                            <i class="fas fa-tag me-1"></i>@question.Topic
                                        </span>
                                        <span class="text-muted">
                                            <i class="fas fa-clock me-1"></i>@question.TimeAgo
                                        </span>
                                        <button class="btn btn-sm btn-primary" onclick="showComingSoon('Respond')">
                                            <i class="fas fa-reply me-1"></i>Respond
                                        </button>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="p-4 text-center text-muted">
                                <i class="fas fa-check-circle fa-3x mb-3"></i>
                                <p>All caught up! No pending questions at the moment.</p>
                            </div>
                        }
                    </div>
                </div>

                <!-- Recent Activity -->
                <div class="activity-feed fade-in-up" style="animation-delay: 0.7s;">
                    <div class="activity-header">
                        <h4><i class="fas fa-history me-2"></i>Recent Activity</h4>
                    </div>
                    @if (Model.RecentActivities != null && Model.RecentActivities.Any())
                    {
                        @foreach (var activity in Model.RecentActivities)
                        {
                            <div class="activity-item tutor-activity-@activity.Type @(activity.Priority == "Urgent" ? "urgent" : "")">
                                <div class="activity-icon">
                                    <i class="@activity.Icon"></i>
                                </div>
                                <div class="activity-content">
                                    <div class="activity-description">
                                        @activity.Description
                                        @if (activity.Priority == "Urgent")
                                        {
                                            <span class="badge bg-danger ms-2">Urgent</span>
                                        }
                                    </div>
                                    <div class="activity-time">@activity.TimeAgo</div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>

            <!-- Sidebar -->
            <div class="col-lg-4">
                <!-- Quick Actions -->
                <div class="card shadow-custom mb-4 fade-in-up" style="animation-delay: 0.8s;">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="fas fa-bolt me-2"></i>Quick Actions</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <button class="btn btn-outline-success" onclick="showComingSoon('Create Topic')">
                                <i class="fas fa-plus me-2"></i>Create New Topic
                            </button>
                            <button class="btn btn-outline-primary" onclick="showComingSoon('Upload Material')">
                                <i class="fas fa-upload me-2"></i>Upload Material
                            </button>
                            <button class="btn btn-outline-primary" onclick="showComingSoon('View Students')">
                                <i class="fas fa-users me-2"></i>My Students
                            </button>
                            <button class="btn btn-outline-primary" onclick="showComingSoon('Analytics')">
                                <i class="fas fa-chart-bar me-2"></i>View Analytics
                            </button>
                        </div>
                    </div>
                </div>

                <!-- My Topics -->
                <div class="card shadow-custom fade-in-up" style="animation-delay: 0.9s;">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="fas fa-bookmark me-2"></i>My Topics</h5>
                    </div>
                    <div class="card-body p-0">
                        @if (Model.MyTopics != null && Model.MyTopics.Any())
                        {
                            @foreach (var topic in Model.MyTopics)
                            {
                                <div class="tutor-topic-item">
                                    <h6 class="mb-1">@topic.Title</h6>
                                    <small class="text-muted d-block mb-2">@topic.Module</small>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <small class="text-muted">
                                                <i class="fas fa-users me-1"></i>@topic.SubscriberCount
                                            </small>
                                            @if (topic.PendingQuestions > 0)
                                            {
                                                <span class="badge bg-warning text-dark ms-2">
                                                    @topic.PendingQuestions pending
                                                </span>
                                            }
                                        </div>
                                        <button class="btn btn-sm btn-outline-primary" onclick="showComingSoon('Manage')">
                                            Manage
                                        </button>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Role Switcher (for testing) -->
        <div class="text-center mt-4">
            <a href="@Url.Action("SwitchRole", "Dashboard", new { role = "student" })" class="btn btn-sm btn-outline-secondary">
                <i class="fas fa-exchange-alt me-2"></i>Switch to Student View (Testing)
            </a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Animate stats numbers
            document.querySelectorAll('.stats-number').forEach((number, index) => {
                setTimeout(() => {
                    const text = number.textContent;
                    const isPercentage = text.includes('%');
                    const target = parseInt(text.replace('%', ''));
                    animateNumber(number, target, isPercentage);
                }, index * 200);
            });

            // Highlight urgent items
            document.querySelectorAll('.urgent').forEach(item => {
                item.style.borderLeft = '4px solid #dc3545';
            });
        });

        function animateNumber(element, target, isPercentage) {
            let current = 0;
            const increment = Math.ceil(target / 30);
            const timer = setInterval(() => {
                current += increment;
                if (current >= target) {
                    current = target;
                    clearInterval(timer);
                }
                element.textContent = current + (isPercentage ? '%' : '');
            }, 50);
        }
    </script>
}